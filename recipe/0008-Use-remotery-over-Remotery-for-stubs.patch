From 61d4bac84adda3df9b8b6ac0c49afc6f020b6063 Mon Sep 17 00:00:00 2001
From: Julien Jerphanion <git@jjerphan.xyz>
Date: Wed, 3 May 2023 11:14:21 +0200
Subject: [PATCH] Use 'remotery' over 'Remotery' for stubs

Signed-off-by: Julien Jerphanion <git@jjerphan.xyz>
---
 CMakeLists.txt          | 30 +++++++++++++-------------
 RemoteryConfig.cmake.in | 47 -----------------------------------------
 remoteryConfig.cmake.in | 47 +++++++++++++++++++++++++++++++++++++++++
 3 files changed, 62 insertions(+), 62 deletions(-)
 delete mode 100644 RemoteryConfig.cmake.in
 create mode 100644 remoteryConfig.cmake.in

diff --git a/CMakeLists.txt b/CMakeLists.txt
index fc8112d..a58ef20 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,6 +1,6 @@
 cmake_minimum_required(VERSION 3.16)
 
-project(Remotery)
+project(remotery)
 
 # By default, we build in Release mode.
 if(NOT CMAKE_BUILD_TYPE)
@@ -62,8 +62,8 @@ message(STATUS "${PROJECT_NAME} binary version: ${REMOTERY_BINARY_VERSION}")
 # Build options
 # =============
 
-option(REMOTERY_BUILD_SHARED_LIBS "Build Remotery shared library" ON)
-option(REMOTERY_BUILD_STATIC_LIBS "Build Remotery static library" ON)
+option(REMOTERY_BUILD_SHARED_LIBS "Build remotery shared library" ON)
+option(REMOTERY_BUILD_STATIC_LIBS "Build remotery static library" ON)
 
 message(STATUS "Build shared libraries: ${REMOTERY_BUILD_SHARED_LIBS}")
 message(STATUS "Build static libraries: ${REMOTERY_BUILD_STATIC_LIBS}")
@@ -126,23 +126,23 @@ macro(remotery_create_target target_name linkage output_name)
 
 endmacro()
 
-set(Remotery_targets "")
+set(remotery_targets "")
 
 if(REMOTERY_BUILD_SHARED_LIBS)
-    remotery_create_target(Remotery SHARED Remotery)
-    list(APPEND Remotery_targets Remotery)
+    remotery_create_target(remotery SHARED remotery)
+    list(APPEND remotery_targets remotery)
 endif()
 
 if(REMOTERY_BUILD_STATIC_LIBS)
     # On Windows, a static library should use a different output name
     # to avoid name conflicts with the shared library.
     if(WIN32)
-        remotery_create_target(Remotery-static STATIC Remotery_static)
+        remotery_create_target(remotery-static STATIC remotery_static)
     else()
-        remotery_create_target(Remotery-static STATIC Remotery)
+        remotery_create_target(remotery-static STATIC remotery)
     endif()
 
-    list(APPEND Remotery_targets Remotery-static)
+    list(APPEND remotery_targets remotery-static)
 endif()
 
 # Tests
@@ -158,11 +158,11 @@ include(CMakePackageConfigHelpers)
 
 set(
     REMOTERY_CMAKECONFIG_INSTALL_DIR "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}"
-    CACHE STRING "install path for RemoteryConfig.cmake"
+    CACHE STRING "install path for remoteryConfig.cmake"
 )
 
 install(
-    TARGETS ${Remotery_targets}
+    TARGETS ${remotery_targets}
     EXPORT ${PROJECT_NAME}-targets
     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
     LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
@@ -176,10 +176,10 @@ export(
     FILE "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}Targets.cmake"
 )
 
-# Configure 'RemoteryConfig.cmake' for a build tree
-set(REMOTERY_CONFIG_CODE "####### Expanded from \@Remotery_CONFIG_CODE\@ #######\n")
+# Configure 'remoteryConfig.cmake' for a build tree
+set(REMOTERY_CONFIG_CODE "####### Expanded from \@remotery_CONFIG_CODE\@ #######\n")
 set(REMOTERY_CONFIG_CODE "${REMOTERY_CONFIG_CODE}set(CMAKE_MODULE_PATH \"${CMAKE_CURRENT_SOURCE_DIR}/cmake;\${CMAKE_MODULE_PATH}\")\n")
-set(REMOTERY_CONFIG_CODE "${REMOTERY_CONFIG_CODE}####### End of expanded section on Remotery_CONFIG_CODE #######\n")
+set(REMOTERY_CONFIG_CODE "${REMOTERY_CONFIG_CODE}####### End of expanded section on remotery_CONFIG_CODE #######\n")
 
 configure_package_config_file(
     ${PROJECT_NAME}Config.cmake.in
@@ -187,7 +187,7 @@ configure_package_config_file(
     INSTALL_DESTINATION ${PROJECT_BINARY_DIR}
 )
 
-# Configure 'RemoteryConfig.cmake' for an install tree
+# Configure 'remoteryConfig.cmake' for an install tree
 configure_package_config_file(
     ${PROJECT_NAME}Config.cmake.in
     "${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/${PROJECT_NAME}Config.cmake"
diff --git a/RemoteryConfig.cmake.in b/RemoteryConfig.cmake.in
deleted file mode 100644
index 2c04478..0000000
--- a/RemoteryConfig.cmake.in
+++ /dev/null
@@ -1,47 +0,0 @@
-# Remotery cmake module
-#
-# This module defines the following variables in your project::
-#
-#   Remotery_FOUND          - True if remotery is available
-#   Remotery_INCLUDE_DIR    - Include directories for remotery
-#   Remotery_LIBRARY        - The library for dynamically linking
-#   Remotery_STATIC_LIBRARY - The library for statically linking
-
-@PACKAGE_INIT@
-
-set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR};${CMAKE_MODULE_PATH}")
-
-@REMOTERY_CONFIG_CODE@
-
-if(NOT TARGET Remotery AND NOT TARGET Remotery-static)
-    include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")
-
-    if (TARGET Remotery AND TARGET Remotery-static)
-        get_target_property(
-            @PROJECT_NAME@_INCLUDE_DIR Remotery INTERFACE_INCLUDE_DIRECTORIES
-        )
-        get_target_property(
-            @PROJECT_NAME@_LIBRARY Remotery LOCATION
-        )
-        get_target_property(
-            @PROJECT_NAME@_STATIC_LIBRARY Remotery-static LOCATION
-        )
-    elseif (TARGET remotery)
-        get_target_property(
-            @PROJECT_NAME@_INCLUDE_DIR Remotery INTERFACE_INCLUDE_DIRECTORIES
-        )
-        get_target_property(
-            @PROJECT_NAME@_LIBRARY Remotery LOCATION
-        )
-    elseif (TARGET remotery-static)
-        get_target_property(
-            @PROJECT_NAME@_INCLUDE_DIR Remotery-static INTERFACE_INCLUDE_DIRECTORIES
-        )
-        get_target_property(
-            @PROJECT_NAME@_STATIC_LIBRARY Remotery-static LOCATION
-        )
-        set(
-            @PROJECT_NAME@_LIBRARY ${@PROJECT_NAME@_STATIC_LIBRARY}
-        )
-    endif()
-endif()
diff --git a/remoteryConfig.cmake.in b/remoteryConfig.cmake.in
new file mode 100644
index 0000000..e76a9d4
--- /dev/null
+++ b/remoteryConfig.cmake.in
@@ -0,0 +1,47 @@
+# remotery cmake module
+#
+# This module defines the following variables in your project::
+#
+#   remotery_FOUND          - True if remotery is available
+#   remotery_INCLUDE_DIR    - Include directories for remotery
+#   remotery_LIBRARY        - The library for dynamically linking
+#   remotery_STATIC_LIBRARY - The library for statically linking
+
+@PACKAGE_INIT@
+
+set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR};${CMAKE_MODULE_PATH}")
+
+@REMOTERY_CONFIG_CODE@
+
+if(NOT TARGET remotery AND NOT TARGET remotery-static)
+    include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")
+
+    if (TARGET remotery AND TARGET remotery-static)
+        get_target_property(
+            @PROJECT_NAME@_INCLUDE_DIR remotery INTERFACE_INCLUDE_DIRECTORIES
+        )
+        get_target_property(
+            @PROJECT_NAME@_LIBRARY remotery LOCATION
+        )
+        get_target_property(
+            @PROJECT_NAME@_STATIC_LIBRARY remotery-static LOCATION
+        )
+    elseif (TARGET remotery)
+        get_target_property(
+            @PROJECT_NAME@_INCLUDE_DIR remotery INTERFACE_INCLUDE_DIRECTORIES
+        )
+        get_target_property(
+            @PROJECT_NAME@_LIBRARY remotery LOCATION
+        )
+    elseif (TARGET remotery-static)
+        get_target_property(
+            @PROJECT_NAME@_INCLUDE_DIR remotery-static INTERFACE_INCLUDE_DIRECTORIES
+        )
+        get_target_property(
+            @PROJECT_NAME@_STATIC_LIBRARY remotery-static LOCATION
+        )
+        set(
+            @PROJECT_NAME@_LIBRARY ${@PROJECT_NAME@_STATIC_LIBRARY}
+        )
+    endif()
+endif()
-- 
2.40.0

